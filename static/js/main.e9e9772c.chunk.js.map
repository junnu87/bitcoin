{"version":3,"sources":["components/DescTrend.js","components/HighestTradingVolume.js","components/BestDays.js","App.js","index.js"],"names":["DescTrend","prices","data","isLoading","currentArray","longestArray","hourlyArray","difference","i","length","push","map","priceObj","className","moment","format","toString","HighestTradingVolume","highestTradingVolume","total_volumes","reduce","prevObj","currObj","BestDays","lowestPrice","indexOfSmallest","indexOfLargest","priceArray","dateArray","highestPrice","count","price","date","Math","min","indexOf","App","useState","setData","setIsLoading","changeStart","setChangeStart","changeEnd","setChangeEnd","startDate","setStartDate","endDate","setEndDate","calcStart","setCalcStart","calcEnd","setCalcEnd","useEffect","axios","get","then","response","diff","onSubmit","e","preventDefault","unix","value","onChange","target","placeholder","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9e9772c.chunk.js","sourcesContent":["import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst DescTrend = ({ data, isLoading, difference }) => {\r\n  let prices;\r\n  let currentArray = 0;\r\n  let longestArray = 0;\r\n  let hourlyArray = [];\r\n\r\n  if (difference <= 90) {\r\n    if (isLoading === false) {\r\n      for (let i = 0; i <= data.prices.length; i = i + 23) {\r\n        hourlyArray.push(data.prices[i][1])\r\n      }\r\n      prices = hourlyArray;\r\n      for (let i = 0; i <= prices.length; i++) {\r\n        if (prices[i] < prices[i - 1]) {\r\n          currentArray = currentArray + 1;;\r\n        } else if (currentArray >= longestArray) {\r\n            longestArray = currentArray;\r\n            currentArray = 0;\r\n        } else {\r\n          currentArray = 0;\r\n        }\r\n      }\r\n\r\n    }\r\n  } else {\r\n    if (isLoading === false) {\r\n      prices = data.prices.map(priceObj => {\r\n        return priceObj[1]\r\n      })\r\n  \r\n      for (let i = 0; i <= prices.length; i++) {\r\n        if (prices[i] < prices[i - 1]) {\r\n          currentArray +=1;\r\n        } else if (currentArray > longestArray){\r\n            longestArray = currentArray;\r\n            currentArray = 0;\r\n        } else {\r\n          currentArray = 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"descTrend_div\">\r\n      <h3 className=\"section_title\">Descending trend</h3>\r\n      {isLoading ?  \"Loading...\" : <p className=\"p_tag\">between dates <b>{moment(data && data.prices[0][0]).format('DD/MM/YYYY').toString()}</b> and <b>{moment(data.prices[data.prices.length -1][0]).format('DD/MM/YYYY').toString()}</b></p>}\r\n      <p className=\"p_tag\">The longest descending trend was <b>{longestArray} days</b> in a row</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DescTrend\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst HighestTradingVolume = ({data, isLoading}) => {\r\n  let highestTradingVolume;\r\n\r\n  if (isLoading === false) {\r\n    // eslint-disable-next-line no-undef\r\n    highestTradingVolume = data.total_volumes.reduce((prevObj, currObj) => currObj[1] > prevObj[1] ? currObj : prevObj)\r\n  }\r\n\r\n  return (\r\n    <div className=\"highestTradingVolume_div\">\r\n      <h3 className=\"section_title\">Highest Trading volume</h3>\r\n      <p>The date with the highest trading wolume was on <b>{moment(highestTradingVolume[0]).format('DD/MM/YYYY').toString()}</b> and the volume was <b>{highestTradingVolume[1]}</b> euros</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HighestTradingVolume\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst BestDays = ({ data, isLoading }) => {\r\n  let highestPrice = 0;\r\n  let lowestPrice;\r\n  let indexOfSmallest;\r\n  let indexOfLargest;\r\n  let priceArray;\r\n  let dateArray;\r\n  let count = 0;\r\n\r\n  if (isLoading === false) {\r\n    priceArray = data.prices.map(price => {\r\n      return price[1]\r\n    })\r\n\r\n    dateArray = data.prices.map(date => {\r\n      return date[0]\r\n    })\r\n\r\n    lowestPrice = Math.min(...priceArray);\r\n    indexOfSmallest = priceArray.indexOf(lowestPrice);\r\n\r\n    for (let i = indexOfSmallest; i < priceArray.length; i++) {\r\n      if (priceArray[i] > highestPrice) {\r\n        highestPrice = priceArray[i];\r\n      }\r\n    }\r\n    \r\n\r\n    indexOfLargest = priceArray.indexOf(highestPrice)\r\n\r\n    for (let i = 0; i < priceArray.length; i++) {\r\n      if (priceArray[i] > priceArray[i - 1]) {\r\n        count += 1;\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"bestDays_div\">\r\n       <h3 className=\"section_title\">Best day to buy and sell</h3>\r\n       {count === 0 ? <p className=\"p_tag\">You should not buy or sell during this time period</p> : <p className=\"p_tag\">The best day to buy is <b>{moment(dateArray[indexOfSmallest]).format('DD/MM/YYYY').toString()}</b> and the best day to sell is <b>{moment(dateArray[indexOfLargest]).format('DD/MM/YYYY').toString()}</b> </p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BestDays\r\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport moment from 'moment';\nimport DescTrend from './components/DescTrend';\nimport HighestTradingVolume from './components/HighestTradingVolume';\nimport BestDays from './components/BestDays';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [changeStart, setChangeStart] = useState('');\n  const [changeEnd, setChangeEnd] = useState('');\n  const [startDate, setStartDate]  = useState('1577836800');\n  const [endDate, setEndDate] = useState('1609376400');\n  const [calcStart, setCalcStart] = useState('');\n  const [calcEnd, setCalcEnd] = useState('');\n  let difference;\n\n  useEffect(() => {\n    axios.get(`https://api.coingecko.com/api/v3/coins/bitcoin/market_chart/range?vs_currency=eur&from=${startDate}&to=${endDate}`).then(response => {\n      setData(response.data);\n      setIsLoading(false);\n    })\n  }, [startDate, endDate]);\n\n  const handleSelectStart = (e) => {\n    e.preventDefault();\n    setChangeStart(e.target.value);\n  };\n\n  const handleSelectEnd = (e) => {\n    e.preventDefault();\n    setChangeEnd(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setStartDate(moment(`${changeStart} 23:00`).unix());\n    setEndDate(moment(`${changeEnd} 23:00`).unix());\n    setCalcStart(changeStart)\n    setCalcEnd(changeEnd)\n    setChangeStart('');\n    setChangeEnd('');\n  };\n\n  if (calcStart.length === 0) {\n  } else {\n    difference = moment(calcEnd).diff(moment(calcStart), 'days');\n  };\n\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Bitcoin-app</h1>\n      <div>\n        <form onSubmit={handleSubmit}>\n        <div className=\"input_field\">\n        <label>Select start date (MM/DD/YYYY) </label>\n          <input value={changeStart} onChange={handleSelectStart} placeholder=\"MM/DD/YYYY\"/>\n        </div>\n          <div className=\"input_field\">\n          <label>Select end date (MM/DD/YYYY) </label>\n          <input value={changeEnd} onChange={handleSelectEnd} placeholder=\"MM/DD/YYYY\"/>\n          </div>\n\n          <button className=\"submit_button\" type=\"submit\">Search</button>\n        </form>\n      </div>\n      {isLoading ? \n      <div>Loading...</div> : <DescTrend data={data} isLoading={isLoading} difference={difference}/>}\n      \n      {isLoading ? \n      <div>Loading...</div> : <HighestTradingVolume data={data} isLoading={isLoading} difference={difference}/>}\n      \n      {isLoading ?\n      <div>Loading...</div> : <BestDays data={data} isLoading={isLoading} difference={difference}/>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}